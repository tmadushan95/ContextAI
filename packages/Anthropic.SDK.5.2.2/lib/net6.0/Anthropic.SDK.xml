<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Anthropic.SDK</name>
    </assembly>
    <members>
        <member name="T:Anthropic.SDK.AnthropicClient">
            <summary>
            Entry point to the Anthropic API, handling auth and allowing access to the various API endpoints
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.ApiUrlFormat">
            <summary>
            The base URL for the API
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.ApiVersion">
            <summary>
            Version of the Rest Api
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.AnthropicVersion">
            <summary>
            Version of the Anthropic API
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.AnthropicBetaVersion">
            <summary>
            Version of the Anthropic Beta API
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.Auth">
            <summary>
            The API authentication information to use for API calls
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.HttpClient">
            <summary>
            Optionally provide a custom HttpClient to send requests.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.AnthropicClient.#ctor(Anthropic.SDK.APIAuthentication,System.Net.Http.HttpClient)">
            <summary>
            Creates a new entry point to the Anthropic API, handling auth and allowing access to the various API endpoints
            </summary>
            <param name="apiKeys">
            The API authentication information to use for API calls,
            or <see langword="null"/> to attempt to use the <see cref="P:Anthropic.SDK.APIAuthentication.Default"/>,
            potentially loading from environment vars.
            </param>
            <param name="client">A <see cref="P:Anthropic.SDK.AnthropicClient.HttpClient"/>.</param>
            <remarks>
            <see cref="T:Anthropic.SDK.AnthropicClient"/> implements <see cref="T:System.IDisposable"/> to manage the lifecycle of the resources it uses, including <see cref="P:Anthropic.SDK.AnthropicClient.HttpClient"/>.
            When you initialize <see cref="T:Anthropic.SDK.AnthropicClient"/>, it will create an internal <see cref="P:Anthropic.SDK.AnthropicClient.HttpClient"/> instance if one is not provided.
            This internal HttpClient is disposed of when AnthropicClient is disposed of.
            If you provide an external HttpClient instance to AnthropicClient, you are responsible for managing its disposal.
            </remarks>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.Messages">
            <summary>
            Text generation is the core function of the API. You give the API a prompt, and it generates a completion. The way you “program” the API to do a task is by simply describing the task in plain english or providing a few written examples. This simple approach works for a wide range of use cases, including summarization, translation, grammar correction, question answering, chatbots, composing emails, and much more (see the prompt library for inspiration).
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.Batches">
            <summary>
            Batches are a way to send multiple requests to the API at once. This is useful for when you have a large number of requests to make, or when you want to make multiple requests in parallel.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.AnthropicClient.Models">
            <summary>
            Models are a way to manage the models that the API uses to generate completions. You can list models, as well as get information about a specific model.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.AnthropicClient.Dispose">
            <summary>
            Disposes of the resources used by the <see cref="T:Anthropic.SDK.AnthropicClient"/>.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.APIAuthentication.ApiKey">
            <summary>
            The API key, required to access the API endpoint.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.APIAuthentication.op_Implicit(System.String)~Anthropic.SDK.APIAuthentication">
            <summary>
            Allows implicit casting from a string, so that a simple string API key can be provided in place of an instance of <see cref="T:Anthropic.SDK.APIAuthentication"/>
            </summary>
            <param name="key">The API key to convert into a <see cref="T:Anthropic.SDK.APIAuthentication"/>.</param>
        </member>
        <member name="M:Anthropic.SDK.APIAuthentication.#ctor(System.String)">
            <summary>
            Instantiates a new Authentication object with the given <paramref name="apiKey"/>, which may be <see langword="null"/>.
            </summary>
            <param name="apiKey">The API key, required to access the API endpoint.</param>
        </member>
        <member name="P:Anthropic.SDK.APIAuthentication.Default">
            <summary>
            The default authentication to use when no other auth is specified.  This can be set manually, or automatically loaded via environment variables.  <seealso cref="M:Anthropic.SDK.APIAuthentication.LoadFromEnv"/>
            </summary>
        </member>
        <member name="M:Anthropic.SDK.APIAuthentication.LoadFromEnv">
            <summary>
            Attempts to load api key from environment variables, as "ANTHROPIC_API_KEY".
            </summary>
            <returns>Returns the loaded <see cref="T:Anthropic.SDK.APIAuthentication"/> any api keys were found, or <see langword="null"/> if there were no matching environment vars.</returns>
        </member>
        <member name="M:Anthropic.SDK.AuthHelpers.ThisOrDefault(Anthropic.SDK.APIAuthentication)">
            <summary>
            A helper method to swap out <see langword="null"/> <see cref="T:Anthropic.SDK.APIAuthentication"/> objects with the <see cref="P:Anthropic.SDK.APIAuthentication.Default"/> authentication, possibly loaded from ENV.
            </summary>
            <param name="auth">The specific authentication to use if not <see langword="null"/></param>
            <returns>Either the provided <paramref name="auth"/> or the <see cref="P:Anthropic.SDK.APIAuthentication.Default"/></returns>
        </member>
        <member name="T:Anthropic.SDK.BaseEndpoint">
            <summary>
            Base class for all API endpoints with common HTTP functionality
            </summary>
        </member>
        <member name="P:Anthropic.SDK.BaseEndpoint.Url">
            <summary>
            Gets the URL of the endpoint.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.BaseEndpoint.GetClient">
            <summary>
            Gets an HTTPClient with the appropriate authorization and other headers set.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.BaseEndpoint.ReadResponseContentAsync(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
            <summary>
            Helper method to read the response content as a string.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.BaseEndpoint.HttpRequestMessages``1(System.String,System.Net.Http.HttpMethod,System.Object,System.Threading.CancellationToken)">
            <summary>
            Makes an HTTP request and deserializes the response to the specified type.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.BaseEndpoint.HttpRequestSimple``1(System.String,System.Net.Http.HttpMethod,System.Object,System.Threading.CancellationToken)">
            <summary>
            Makes an HTTP request and deserializes the response to the specified type without custom converters.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.BaseEndpoint.HttpRequestRaw(System.String,System.Net.Http.HttpMethod,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Makes a raw HTTP request and returns the response.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.BaseEndpoint.HandleErrorResponseAsync(System.Net.Http.HttpResponseMessage,System.String,System.String)">
            <summary>
            Handles error responses from the API.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.BaseEndpoint.HttpStreamingRequestMessages(System.String,System.Net.Http.HttpMethod,System.Object,System.Threading.CancellationToken)">
            <summary>
            Makes a streaming HTTP request and returns the response as an async enumerable of the specified type.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Batches.BatchesEndpoint.#ctor(Anthropic.SDK.AnthropicClient)">
            <summary>
            Constructor of the api endpoint.  Rather than instantiating this yourself, access it through an instance of <see cref="T:Anthropic.SDK.AnthropicClient"/> as <see cref="P:Anthropic.SDK.AnthropicClient.Batches"/>.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Anthropic.SDK.Batches.BatchesEndpoint.CreateBatchAsync(System.Collections.Generic.List{Anthropic.SDK.Batches.BatchRequest},System.Threading.CancellationToken)">
            <summary>
            Makes a call to create an asynchronous batch call to the Claude AI API.
            </summary>
            <param name="batches"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Batches.BatchesEndpoint.CancelBatchAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a call to cancel an asynchronous batch call to the Claude AI API.
            </summary>
            <param name="batchId"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Batches.BatchesEndpoint.RetrieveBatchStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a call to retrieve the status of a batch call to the Claude AI API.
            </summary>
            <param name="batchId"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Batches.BatchesEndpoint.RetrieveBatchResultsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Streams strongly typed results from a batch call to the Claude AI API.
            </summary>
            <param name="batchId"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Batches.BatchesEndpoint.RetrieveBatchResultsJsonlAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Streams jsonl results from a batch call to the Claude AI API.
            </summary>
            <param name="batchId"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Batches.BatchesEndpoint.ListBatchesAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of Batches you've created from the Claude AI API.
            </summary>
            <param name="beforeId"></param>
            <param name="afterId"></param>
            <param name="limit"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Common.Function.#ctor(System.String,System.String,System.Text.Json.Nodes.JsonNode)">
            <summary>
            Creates a new function description to insert into a chat conversation.
            </summary>
            <param name="name">
            Required. The name of the function to generate arguments for based on the context in a message.<br/>
            May contain a-z, A-Z, 0-9, underscores and dashes, with a maximum length of 64 characters. Recommended to not begin with a number or a dash.
            </param>
            <param name="description">
            An optional description of the function, used by the API to determine if it is useful to include in the response.
            </param>
            <param name="parameters">
            An optional JSON object describing the parameters of the function that the model can generate.
            </param>
        </member>
        <member name="M:Anthropic.SDK.Common.Function.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new function description to insert into a chat conversation.
            </summary>
            <param name="name">
            Required. The name of the function to generate arguments for based on the context in a message.<br/>
            May contain a-z, A-Z, 0-9, underscores and dashes, with a maximum length of 64 characters. Recommended to not begin with a number or a dash.
            </param>
            <param name="description">
            An optional description of the function, used by the API to determine if it is useful to include in the response.
            </param>
            <param name="parameters">
            An optional JSON describing the parameters of the function that the model can generate.
            </param>
        </member>
        <member name="P:Anthropic.SDK.Common.Function.Name">
            <summary>
            The name of the function to generate arguments for.<br/>
            May contain a-z, A-Z, 0-9, and underscores and dashes, with a maximum length of 64 characters.
            Recommended to not begin with a number or a dash.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.Function.Id">
            <summary>
            Id to Send to the API.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.Function.Description">
            <summary>
            The optional description of the function.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.Function.Parameters">
            <summary>
            The optional parameters of the function.
            Describe the parameters that the model should generate in JSON schema format (json-schema.org).
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.Function.Arguments">
            <summary>
            The arguments to use when calling the function.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.Function.Instance">
            <summary>
            The instance of the object to invoke the method on.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.Function.MethodInfo">
            <summary>
            The method to invoke.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Common.Function.Invoke">
            <summary>
            Invokes the function and returns the result as json.
            </summary>
            <returns>The result of the function as json.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Function.Invoke``1">
            <summary>
            Invokes the function and returns the result.
            </summary>
            <typeparam name="T">The expected return type.</typeparam>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Function.InvokeAsync(System.Threading.CancellationToken)">
            <summary>
            Invokes the function and returns the result as json.
            </summary>
            <param name="cancellationToken">Optional, <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The result of the function as json.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Function.InvokeAsync``1(System.Threading.CancellationToken)">
            <summary>
            Invokes the function and returns the result.
            </summary>
            <typeparam name="T">Expected return type.</typeparam>
            <param name="cancellationToken">Optional, <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.FunctionParameterAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Function parameter attribute to help describe the parameter for the function.
            </summary>
            <param name="description">The description of the parameter and its usage.</param>
        </member>
        <member name="M:Anthropic.SDK.Common.FunctionPropertyAttribute.#ctor(System.String,System.Boolean,System.Object,System.Object[])">
            <summary>
            Property Attribute to help with function calling.
            </summary>
            <param name="description">
            The description of the property
            </param>
            <param name="required">
            Is the property required?
            </param>
            <param name="defaultValue">
            The default value.
            </param>
            <param name="possibleValues">
            Enums or other possible values.
            </param>
        </member>
        <member name="P:Anthropic.SDK.Common.FunctionPropertyAttribute.Description">
            <summary>
            The description of the property
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.FunctionPropertyAttribute.Required">
            <summary>
            Is the property required?
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.FunctionPropertyAttribute.DefaultValue">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Common.FunctionPropertyAttribute.PossibleValues">
            <summary>
            Enums or other possible values.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.InvokeFunction">
            <summary>
            Invokes the function and returns the result as json.
            </summary>
            <returns>The result of the function as json.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.InvokeFunction``1">
            <summary>
            Invokes the function and returns the result.
            </summary>
            <typeparam name="T">The type to deserialize the result to.</typeparam>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.InvokeFunctionAsync(System.Threading.CancellationToken)">
            <summary>
            Invokes the function and returns the result as json.
            </summary>
            <param name="cancellationToken">Optional, A token to cancel the request.</param>
            <returns>The result of the function as json.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.InvokeFunctionAsync``1(System.Threading.CancellationToken)">
            <summary>
            Invokes the function and returns the result.
            </summary>
            <typeparam name="T">The type to deserialize the result to.</typeparam>
            <param name="cancellationToken">Optional, A token to cancel the request.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.ClearRegisteredTools">
            <summary>
            Clears the tool cache of all previously registered tools.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.IsToolRegistered(Anthropic.SDK.Common.Tool)">
            <summary>
            Checks if tool exists in cache.
            </summary>
            <param name="tool">The tool to check.</param>
            <returns>True, if the tool is already registered in the tool cache.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.TryRegisterTool(Anthropic.SDK.Common.Tool)">
            <summary>
            Tries to register a tool into the Tool cache.
            </summary>
            <param name="tool">The tool to register.</param>
            <returns>True, if the tool was added to the cache.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.GetAllAvailableTools(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a list of all available tools.
            </summary>
            <remarks>
            This method will scan all assemblies for static methods decorated with the <see cref="T:Anthropic.SDK.Common.FunctionAttribute"/>.
            </remarks>
            <param name="includeDefaults">Optional, Whether to include the default tools (Retrieval and CodeInterpreter).</param>
            <param name="forceUpdate">Optional, Whether to force an update of the tool cache.</param>
            <param name="clearCache">Optional, whether to force the tool cache to be cleared before updating.</param>
            <returns>A list of all available tools.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.GetOrCreateTool(System.Type,System.String,System.String)">
            <summary>
            Get or create a tool from a static method.
            </summary>
            <remarks>
            If the tool already exists, it will be returned. Otherwise, a new tool will be created.<br/>
            The method doesn't need to be decorated with the <see cref="T:Anthropic.SDK.Common.FunctionAttribute"/>.<br/>
            </remarks>
            <param name="type">The type containing the static method.</param>
            <param name="methodName">The name of the method.</param>
            <param name="description">Optional, The description of the method.</param>
            <returns>The tool for the method.</returns>
        </member>
        <member name="M:Anthropic.SDK.Common.Tool.GetOrCreateTool(System.Object,System.String,System.String)">
            <summary>
            Get or create a tool from a method of an instance of an object.
            </summary>
            <remarks>
            If the tool already exists, it will be returned. Otherwise, a new tool will be created.<br/>
            The method doesn't need to be decorated with the <see cref="T:Anthropic.SDK.Common.FunctionAttribute"/>.<br/>
            </remarks>
            <param name="instance">The instance of the object containing the method.</param>
            <param name="methodName">The name of the method.</param>
            <param name="description">Optional, The description of the method.</param>
            <returns>The tool for the method.</returns>
        </member>
        <member name="T:Anthropic.SDK.Constants.AnthropicModels">
            <summary>
            Constants that represent Anthropic Models.
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude_v2_1">
            <summary>
            Claude V2.1 latest full version.
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude_v2_0">
            <summary>
            Claude V2.0 latest full version.
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.ClaudeInstant_v1_2">
            <summary>
            Claude Instant V1.2 latest full version.
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude3Opus">
            <summary>
            Claude 3 Opus
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude3Sonnet">
            <summary>
            Claude 3 Sonnet
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude35Sonnet">
            <summary>
            Claude 3.5 Sonnet
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude37Sonnet">
            <summary>
            Claude 3.7 Sonnet
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude35Haiku">
            <summary>
            Claude 3.5 Haiku
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.AnthropicModels.Claude3Haiku">
            <summary>
            Claude 3 Haiku
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Constants.VertexAIModels">
            <summary>
            Constants that represent Anthropic Models available on Vertex AI.
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.VertexAIModels.Claude3Opus">
            <summary>
            Claude 3 Opus on Vertex AI - Powerful model for complex tasks
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.VertexAIModels.Claude3Sonnet">
            <summary>
            Claude 3 Sonnet on Vertex AI - Balanced Claude model for a wide range of tasks
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.VertexAIModels.Claude3Haiku">
            <summary>
            Claude 3 Haiku on Vertex AI - Fastest and most compact model for near-instant responsiveness
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.VertexAIModels.Claude35Sonnet">
            <summary>
            Claude 3.5 Sonnet on Vertex AI - High level of intelligence and capability
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.VertexAIModels.Claude35Haiku">
            <summary>
            Claude 3.5 Haiku on Vertex AI - Intelligence at blazing speeds
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Constants.VertexAIModels.Claude37Sonnet">
            <summary>
            Claude 3.7 Sonnet on Vertex AI - Highest level of intelligence and capability with toggleable extended thinking
            </summary>
        </member>
        <member name="F:Anthropic.SDK.EndpointBase.Client">
            <summary>
            The internal reference to the Client, mostly used for authentication
            </summary>
        </member>
        <member name="M:Anthropic.SDK.EndpointBase.#ctor(Anthropic.SDK.AnthropicClient)">
            <summary>
            Constructor of the api endpoint base, to be called from the constructor of any derived classes.
            </summary>
            <param name="client"></param>
        </member>
        <member name="P:Anthropic.SDK.EndpointBase.Endpoint">
            <summary>
            The name of the endpoint, which is the final path segment in the API URL.  Must be overriden in a derived class.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.EndpointBase.Url">
            <summary>
            Gets the URL of the endpoint.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.EndpointBase.GetClient">
            <summary>
            Gets an HTTPClient with the appropriate authorization and other headers set.
            </summary>
            <returns>The fully initialized HttpClient</returns>
            <exception cref="T:System.Security.Authentication.AuthenticationException">Thrown if there is no valid authentication.</exception>
        </member>
        <member name="M:Anthropic.SDK.EndpointBase.HandleErrorResponseAsync(System.Net.Http.HttpResponseMessage,System.String,System.String)">
            <summary>
            Handle error responses from the API
            </summary>
        </member>
        <member name="M:Anthropic.SDK.EndpointBase.HttpStreamingRequestMessages(System.String,System.Net.Http.HttpMethod,System.Object,System.Threading.CancellationToken)">
            <summary>
            Makes a streaming HTTP request and returns the response as an async enumerable of MessageResponse.
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ChatClientHelper">
            <summary>
            Helper class for chat client implementations
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.ChatClientHelper.CreateUsageDetails(Anthropic.SDK.Messaging.Usage)">
            <summary>
            Create usage details from usage
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.ChatClientHelper.CreateMessageParameters(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions)">
            <summary>
            Create message parameters from chat messages and options
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.ChatClientHelper.ProcessResponseContent(Anthropic.SDK.Messaging.MessageResponse)">
            <summary>
            Process response content
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ChatClientHelper.FunctionParameters">
            <summary>
            Function parameters class
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ContentBase">
            <summary>
            Base Class for Content to Send to Claude
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ContentBase.Type">
            <summary>
            Type of Content
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.TextContent">
            <summary>
            Helper Class for Text Content to Send to Claude
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.TextContent.Type">
            <summary>
            Type of Content (Text, pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.TextContent.Text">
            <summary>
            Text to send to Claude in a Block
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.TextContent.Citations">
            <summary>
            Citations
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ThinkingContent">
            <summary>
            Helper Class for Thinking Content
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ThinkingContent.Type">
            <summary>
            Type of Content (Text, pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ThinkingContent.Thinking">
            <summary>
            Thinking Block
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ThinkingContent.Signature">
            <summary>
            Encrypted Data
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.RedactedThinkingContent">
            <summary>
            Helper Class for Redacted Thinking Content
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.RedactedThinkingContent.Type">
            <summary>
            Type of Content (Text, pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.RedactedThinkingContent.Data">
            <summary>
            Encrypted Data
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ImageContent">
            <summary>
            Helper Class for Image Content to Send to Claude
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ImageContent.Type">
            <summary>
            Type of Content (Image, pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ImageContent.Source">
            <summary>
            Source of Image
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentContent.Type">
            <summary>
            Type of Content (Image, pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentContent.Source">
            <summary>
            Source of Document
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentContent.Citations">
            <summary>
            Citations
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentContent.Context">
            <summary>
            Context
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentContent.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.Citations">
            <summary>
            Helper Class for Citations
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.SourceType">
            <summary>
            Image/Document Format Types
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.DocumentSource">
            <summary>
            Definition of document to be sent to Claude
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentSource.Type">
            <summary>
            Image data format (pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentSource.Content">
            <summary>
            Content of the Document
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentSource.MediaType">
            <summary>
            Image format
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentSource.Data">
            <summary>
            Base 64 image data
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.DocumentSource.Url">
            <summary>
            Document URL
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ImageSource">
            <summary>
            Definition of image to be sent to Claude
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ImageSource.Type">
            <summary>
            Image data format (pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ImageSource.MediaType">
            <summary>
            Image format
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ImageSource.Url">
            <summary>
            Image URL
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ImageSource.Data">
            <summary>
            Base 64 image data
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ToolUseContent">
            <summary>
            Tool Use Content To Send to Claude
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolUseContent.Type">
            <summary>
            Type of Content (Tool_Use, pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolUseContent.Id">
            <summary>
            Id of the Tool
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolUseContent.Name">
            <summary>
            Name of the Tool
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolUseContent.Input">
            <summary>
            Inputs of the Tool
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ToolResultContent">
            <summary>
            Tool Result Content Returned From Claude
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolResultContent.Type">
            <summary>
            Type of Content (Tool_Result, pre-set)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolResultContent.ToolUseId">
            <summary>
            Tool Use Id
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolResultContent.Content">
            <summary>
            Content of the Tool Result
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.ToolResultContent.IsError">
            <summary>
            Indicates if the Tool Result is an Error
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.ContentType">
            <summary>
            Content Type Definitions
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.Extensions">
            <summary>
            Helpers for Messaging
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.Extensions.AsAssistantMessages(System.Collections.Generic.List{Anthropic.SDK.Messaging.ContentBase})">
            <summary>
            Converts a list of <see cref="T:Anthropic.SDK.Messaging.ContentBase"/> to a <see cref="T:Anthropic.SDK.Messaging.Message"/> with the role of <see cref="F:Anthropic.SDK.Messaging.RoleType.Assistant"/>
            </summary>
            <param name="content"></param>
            <returns><see cref="T:Anthropic.SDK.Messaging.Message"/></returns>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Message.Role">
            <summary>
            Accepts <see cref="F:Anthropic.SDK.Messaging.RoleType.User"/> or <see cref="F:Anthropic.SDK.Messaging.RoleType.Assistant"/>
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Message.Content">
            <summary>
            Accepts text, or an array of <see cref="T:Anthropic.SDK.Messaging.ImageContent"/> and/or <see cref="T:Anthropic.SDK.Messaging.TextContent"/>
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.MessageParameters.PromptCaching">
            <summary>
            Prompt Cache Type Definitions. Designed to be used as a bitwise assignment if you want to cache multiple types and are caching enough context.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.Microsoft#Extensions#AI#IChatClient#GetResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.Microsoft#Extensions#AI#IChatClient#GetStreamingResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.System#IDisposable#Dispose">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.Microsoft#Extensions#AI#IChatClient#GetService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.#ctor(Anthropic.SDK.AnthropicClient)">
            <summary>
            Constructor of the api endpoint.  Rather than instantiating this yourself, access it through an instance of <see cref="T:Anthropic.SDK.AnthropicClient"/> as <see cref="P:Anthropic.SDK.AnthropicClient.Messages"/>.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.GetClaudeMessageAsync(Anthropic.SDK.Messaging.MessageParameters,System.Threading.CancellationToken)">
            <summary>
            Makes a non-streaming call to the Claude messages API. Be sure to set stream to false in <param name="parameters"></param>.
            </summary>
            <param name="parameters"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.StreamClaudeMessageAsync(Anthropic.SDK.Messaging.MessageParameters,System.Threading.CancellationToken)">
            <summary>
            Makes a streaming call to the Claude completion API using an IAsyncEnumerable. Be sure to set stream to true in <param name="parameters"></param>.
            </summary>
            <param name="parameters"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Messaging.MessagesEndpoint.CountMessageTokensAsync(Anthropic.SDK.Messaging.MessageCountTokenParameters,System.Threading.CancellationToken)">
            <summary>
            Makes a call to count the number of tokens in a request.
            </summary>
            <param name="parameters"></param>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="T:Anthropic.SDK.Messaging.PromptCacheType">
            <summary>
            Prompt Cache Type Definitions. 
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Messaging.PromptCacheType.None">
            <summary>
            No Prompt Caching
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Messaging.PromptCacheType.FineGrained">
            <summary>
            Use the cache-control instructions from each message for fine-grained control
            </summary>
        </member>
        <member name="F:Anthropic.SDK.Messaging.PromptCacheType.AutomaticToolsAndSystem">
            <summary>
            Use the cache-control instructions from the system messages for automatic tools and system message caching
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.InputSchema">
            <summary>
            Tool Input Schema Class
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.InputSchema.Type">
            <summary>
            Type of the Schema, default is object
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.InputSchema.Properties">
            <summary>
            Properties of the Schema
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.InputSchema.Required">
            <summary>
            Required Properties
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.Tool">
            <summary>
            Serializable Tool Class
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Tool.Name">
            <summary>
            Tool Name
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Tool.Description">
            <summary>
            Tool Description
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Tool.InputSchema">
            <summary>
            Tool Input Schema
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.Property">
            <summary>
            Property Definition Class
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Property.Type">
            <summary>
            Property Type
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Property.Enum">
            <summary>
            Enum Values as Strings (if applicable)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.Messaging.Property.Description">
            <summary>
            Description of the Property
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint">
            <summary>
            Vertex AI implementation of the Messages endpoint
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.Microsoft#Extensions#AI#IChatClient#GetResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.Microsoft#Extensions#AI#IChatClient#GetStreamingResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.System#IDisposable#Dispose">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.Microsoft#Extensions#AI#IChatClient#GetService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.#ctor(Anthropic.SDK.VertexAIClient)">
            <summary>
            Constructor of the api endpoint. Rather than instantiating this yourself, access it through an instance of <see cref="T:Anthropic.SDK.VertexAIClient"/> as <see cref="P:Anthropic.SDK.VertexAIClient.Messages"/>.
            </summary>
            <param name="client">The Vertex AI client</param>
        </member>
        <member name="P:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.Model">
            <summary>
            The default model to use when no model is specified in the request parameters
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.GetClaudeMessageAsync(Anthropic.SDK.Messaging.MessageParameters,System.Threading.CancellationToken)">
            <summary>
            Makes a non-streaming call to the Claude messages API via Vertex AI. Be sure to set stream to false in <param name="parameters"></param>.
            </summary>
            <param name="parameters">The message parameters</param>
            <param name="ctx">Cancellation token</param>
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.StreamClaudeMessageAsync(Anthropic.SDK.Messaging.MessageParameters,System.Threading.CancellationToken)">
            <summary>
            Makes a streaming call to the Claude completion API via Vertex AI using an IAsyncEnumerable. Be sure to set stream to true in <param name="parameters"></param>.
            </summary>
            <param name="parameters">The message parameters</param>
            <param name="ctx">Cancellation token</param>
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.SetCacheControls(Anthropic.SDK.Messaging.MessageParameters)">
            <summary>
            Sets the cache control properties based on the prompt caching type
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.TryExtractContent(System.Text.Json.JsonElement,System.String@)">
            <summary>
            Helper method to extract content from various possible response formats
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.ConvertMessageContent(System.Collections.Generic.List{Anthropic.SDK.Messaging.ContentBase})">
            <summary>
            Converts Anthropic content to the format expected by Claude
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Messaging.VertexAIMessagesEndpoint.CreateVertexAIRequest(Anthropic.SDK.Messaging.MessageParameters)">
            <summary>
            Creates a Vertex AI request from Anthropic message parameters
            </summary>
        </member>
        <member name="T:Anthropic.SDK.Models.ModelsEndpoint">
            <summary>
            Endpoint for interacting with the Models API.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.Models.ModelsEndpoint.#ctor(Anthropic.SDK.AnthropicClient)">
            <summary>
            Constructor of the api endpoint.  Rather than instantiating this yourself, access it through an instance of <see cref="T:Anthropic.SDK.AnthropicClient"/> as <see cref="P:Anthropic.SDK.AnthropicClient.Models"/>.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Anthropic.SDK.Models.ModelsEndpoint.ListModelsAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieves a paginated list of Models from the Claude AI API.
            </summary>
            <param name="beforeId"></param>
            <param name="afterId"></param>
            <param name="limit"></param>
            <param name="ctx"></param>
        </member>
        <member name="M:Anthropic.SDK.Models.ModelsEndpoint.GetModelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
             Makes a call to retrieve a specific model from the Claude AI API.
             </summary>
             <param name="modelId"></param>
             <param name="ctx"></param>
        </member>
        <member name="T:Anthropic.SDK.RateLimitsExceeded">
            <summary>
            Thrown when the caller has exhausted current rate limits
            The caller should wait until RetryAfter before making another request
            </summary>
        </member>
        <member name="P:Anthropic.SDK.RateLimitsExceeded.RateLimits">
            <summary>
            Rate limits as returned by the API
            </summary>
        </member>
        <member name="M:Anthropic.SDK.RateLimitsExceeded.#ctor(System.String,Anthropic.SDK.Messaging.RateLimits,System.Net.HttpStatusCode)">
            <inheritdoc />
        </member>
        <member name="T:Anthropic.SDK.VertexAIAuthentication">
            <summary>
            Authentication for Google Cloud Vertex AI
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIAuthentication.ProjectId">
            <summary>
            The Google Cloud Project ID
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIAuthentication.Region">
            <summary>
            The Google Cloud Region (e.g., "us-east5")
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIAuthentication.ApiKey">
            <summary>
            The Google Cloud API Key (optional, can use default credentials)
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIAuthentication.AccessToken">
            <summary>
            The OAuth2 Access Token (optional, can use default credentials)
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIAuthentication.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates a new Vertex AI Authentication object with the given parameters
            </summary>
            <param name="projectId">The Google Cloud Project ID</param>
            <param name="region">The Google Cloud Region (e.g., "us-east5")</param>
            <param name="apiKey">The Google Cloud API Key (optional)</param>
            <param name="accessToken">The OAuth2 Access Token (optional)</param>
        </member>
        <member name="P:Anthropic.SDK.VertexAIAuthentication.Default">
            <summary>
            The default authentication to use when no other auth is specified. This can be set manually, or automatically loaded via environment variables.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIAuthentication.LoadFromEnv">
            <summary>
            Attempts to load Vertex AI authentication from environment variables:
            - GOOGLE_CLOUD_PROJECT: The Google Cloud Project ID
            - GOOGLE_CLOUD_REGION: The Google Cloud Region
            - GOOGLE_API_KEY: The Google Cloud API Key (optional)
            - GOOGLE_ACCESS_TOKEN: The OAuth2 Access Token (optional)
            </summary>
            <returns>Returns the loaded <see cref="T:Anthropic.SDK.VertexAIAuthentication"/> if environment variables were found, or <see langword="null"/> if there were no matching environment vars.</returns>
        </member>
        <member name="M:Anthropic.SDK.VertexAIAuthHelpers.ThisOrDefault(Anthropic.SDK.VertexAIAuthentication)">
            <summary>
            A helper method to swap out <see langword="null"/> <see cref="T:Anthropic.SDK.VertexAIAuthentication"/> objects with the <see cref="P:Anthropic.SDK.VertexAIAuthentication.Default"/> authentication, possibly loaded from ENV.
            </summary>
            <param name="auth">The specific authentication to use if not <see langword="null"/></param>
            <returns>Either the provided <paramref name="auth"/> or the <see cref="P:Anthropic.SDK.VertexAIAuthentication.Default"/></returns>
        </member>
        <member name="T:Anthropic.SDK.VertexAIClient">
            <summary>
            Entry point to the Anthropic API via Google Cloud Vertex AI, handling auth and allowing access to the API endpoints
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIClient.ApiUrlFormat">
            <summary>
            The base URL format for the Vertex AI API
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIClient.Auth">
            <summary>
            The API authentication information to use for API calls
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIClient.HttpClient">
            <summary>
            Optionally provide a custom HttpClient to send requests.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIClient.#ctor(Anthropic.SDK.VertexAIAuthentication,System.Net.Http.HttpClient)">
            <summary>
            Creates a new entry point to the Anthropic API via Google Cloud Vertex AI
            </summary>
            <param name="auth">
            The Vertex AI authentication information to use for API calls,
            or <see langword="null"/> to attempt to use the <see cref="P:Anthropic.SDK.VertexAIAuthentication.Default"/>,
            potentially loading from environment vars.
            </param>
            <param name="client">A <see cref="P:Anthropic.SDK.VertexAIClient.HttpClient"/>.</param>
            <remarks>
            <see cref="T:Anthropic.SDK.VertexAIClient"/> implements <see cref="T:System.IDisposable"/> to manage the lifecycle of the resources it uses, including <see cref="P:Anthropic.SDK.VertexAIClient.HttpClient"/>.
            When you initialize <see cref="T:Anthropic.SDK.VertexAIClient"/>, it will create an internal <see cref="P:Anthropic.SDK.VertexAIClient.HttpClient"/> instance if one is not provided.
            This internal HttpClient is disposed of when VertexAIClient is disposed of.
            If you provide an external HttpClient instance to VertexAIClient, you are responsible for managing its disposal.
            </remarks>
        </member>
        <member name="P:Anthropic.SDK.VertexAIClient.Messages">
            <summary>
            Text generation is the core function of the API. You give the API a prompt, and it generates a completion.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIClient.Dispose">
            <summary>
            Disposes of the resources used by the <see cref="T:Anthropic.SDK.VertexAIClient"/>.
            </summary>
        </member>
        <member name="T:Anthropic.SDK.VertexAIEndpointBase">
            <summary>
            Base class for Vertex AI endpoints
            </summary>
        </member>
        <member name="F:Anthropic.SDK.VertexAIEndpointBase.Client">
            <summary>
            The internal reference to the Client, mostly used for authentication
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIEndpointBase.#ctor(Anthropic.SDK.VertexAIClient)">
            <summary>
            Constructor of the api endpoint base, to be called from the constructor of any derived classes.
            </summary>
            <param name="client">The Vertex AI client</param>
        </member>
        <member name="P:Anthropic.SDK.VertexAIEndpointBase.Endpoint">
            <summary>
            The name of the endpoint, which is the final path segment in the API URL. Must be overriden in a derived class.
            </summary>
        </member>
        <member name="P:Anthropic.SDK.VertexAIEndpointBase.Model">
            <summary>
            The default Anthropic model to use with Vertex AI.
            Can be overridden in derived classes or through method parameters.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIEndpointBase.GetModelForRequest(Anthropic.SDK.Messaging.MessageParameters)">
            <summary>
            Gets the model to use for the request, either from parameters or falling back to the default model.
            </summary>
            <param name="parameters">Optional message parameters that may contain a model override</param>
            <returns>The model to use for the request</returns>
        </member>
        <member name="P:Anthropic.SDK.VertexAIEndpointBase.Url">
            <summary>
            Gets the URL of the endpoint.
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIEndpointBase.GetUrlForModel(System.String)">
            <summary>
            Gets the URL of the endpoint for a specific model.
            </summary>
            <param name="model">The model to use in the URL</param>
        </member>
        <member name="M:Anthropic.SDK.VertexAIEndpointBase.GetClient">
            <summary>
            Gets an HTTPClient with the appropriate authorization and other headers set.
            </summary>
            <returns>The fully initialized HttpClient</returns>
            <exception cref="T:System.Security.Authentication.AuthenticationException">Thrown if there is no valid authentication.</exception>
        </member>
        <member name="M:Anthropic.SDK.VertexAIEndpointBase.HandleErrorResponseAsync(System.Net.Http.HttpResponseMessage,System.String,System.String)">
            <summary>
            Handle error responses from the API
            </summary>
        </member>
        <member name="M:Anthropic.SDK.VertexAIEndpointBase.HttpStreamingRequestMessages(System.String,System.Net.Http.HttpMethod,System.Object,System.Threading.CancellationToken)">
            <summary>
            Makes a streaming HTTP request and returns the response as an async enumerable of MessageResponse.
            </summary>
        </member>
    </members>
</doc>
